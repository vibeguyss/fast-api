name: Docker - git CI/CD

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  deploy-app-server:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Make Gradle executable
        run: chmod +x ./spring-app/gradlew

      - name: Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build Spring bootJar (skip test)
        run: |
          cd spring-app
          ./gradlew bootJar -x test

      - name: Docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker build & push - Spring
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-app ./back-end
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-app

      - name: Docker build & push - FastAPI
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/fastapi-app ./FastAPIProject
          docker push ${{ secrets.DOCKER_USERNAME }}/fastapi-app

      - name: Deploy to App Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/app
            docker pull ${{ secrets.DOCKER_USERNAME }}/spring-app
            docker pull ${{ secrets.DOCKER_USERNAME }}/fastapi-app
            docker-compose down
            docker-compose up -d --build
            docker image prune -f
